// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolController.Models;

#nullable disable

namespace SchoolController.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolController.Models.CanBoDaoTao", b =>
                {
                    b.Property<string>("MaCanBoDaoTao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCanBoDaoTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaCanBoDaoTao");

                    b.HasIndex("TenTaiKhoan");

                    b.ToTable("CanBoDaoTaos");
                });

            modelBuilder.Entity("SchoolController.Models.ChuyenNganh", b =>
                {
                    b.Property<string>("MaChuyenNganh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenChuyenNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChuyenNganh");

                    b.ToTable("ChuyenNganhs");
                });

            modelBuilder.Entity("SchoolController.Models.ChuyenNganhMonHoc", b =>
                {
                    b.Property<string>("MaChuyenNganh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaChuyenNganh", "MaMonHoc");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("ChuyenNganhMonHocs");
                });

            modelBuilder.Entity("SchoolController.Models.DiemSo", b =>
                {
                    b.Property<string>("MaSinhVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGiangVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaSinhVien", "MaMonHoc");

                    b.HasIndex("MaGiangVien");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("DiemSos");
                });

            modelBuilder.Entity("SchoolController.Models.GiangVien", b =>
                {
                    b.Property<string>("MaGiangVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGiangVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaGiangVien");

                    b.HasIndex("TenTaiKhoan");

                    b.ToTable("GiangViens");
                });

            modelBuilder.Entity("SchoolController.Models.GiangVienMonHoc", b =>
                {
                    b.Property<string>("MaGiangVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DanhGia")
                        .HasColumnType("int");

                    b.HasKey("MaGiangVien", "MaMonHoc");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("GiangVienMonHocs");
                });

            modelBuilder.Entity("SchoolController.Models.Lop", b =>
                {
                    b.Property<string>("MaLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaLop");

                    b.ToTable("Lops");
                });

            modelBuilder.Entity("SchoolController.Models.MonHoc", b =>
                {
                    b.Property<string>("MaMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonHoc");

                    b.ToTable("MonHocs");
                });

            modelBuilder.Entity("SchoolController.Models.PhuHuynh", b =>
                {
                    b.Property<string>("MaPhuHuynh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhuHuynh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaPhuHuynh");

                    b.HasIndex("TenTaiKhoan");

                    b.ToTable("PhuHuynhs");
                });

            modelBuilder.Entity("SchoolController.Models.SinhVien", b =>
                {
                    b.Property<string>("MaSinhVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChuyenNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaPhuHuynh")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSinhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaSinhVien");

                    b.HasIndex("MaChuyenNganh");

                    b.HasIndex("MaPhuHuynh");

                    b.HasIndex("TenTaiKhoan");

                    b.ToTable("SinhViens");
                });

            modelBuilder.Entity("SchoolController.Models.TaiKhoan", b =>
                {
                    b.Property<string>("TenTaiKhoan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenTaiKhoan");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("SchoolController.Models.CanBoDaoTao", b =>
                {
                    b.HasOne("SchoolController.Models.TaiKhoan", "TenTaiKhoanNavigation")
                        .WithMany("CanBoDaoTaos")
                        .HasForeignKey("TenTaiKhoan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TenTaiKhoanNavigation");
                });

            modelBuilder.Entity("SchoolController.Models.ChuyenNganhMonHoc", b =>
                {
                    b.HasOne("SchoolController.Models.ChuyenNganh", "MaChuyenNganhNavigation")
                        .WithMany("ChuyenNganhMonHocs")
                        .HasForeignKey("MaChuyenNganh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolController.Models.MonHoc", "MaMonHocNavigation")
                        .WithMany("ChuyenNganhMonHocs")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaChuyenNganhNavigation");

                    b.Navigation("MaMonHocNavigation");
                });

            modelBuilder.Entity("SchoolController.Models.DiemSo", b =>
                {
                    b.HasOne("SchoolController.Models.GiangVien", "MaGiangVienNavigation")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaGiangVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolController.Models.Lop", "MaLopNavigation")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolController.Models.MonHoc", "MaMonHocNavigation")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolController.Models.SinhVien", "MaSinhVienNavigation")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaSinhVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaGiangVienNavigation");

                    b.Navigation("MaLopNavigation");

                    b.Navigation("MaMonHocNavigation");

                    b.Navigation("MaSinhVienNavigation");
                });

            modelBuilder.Entity("SchoolController.Models.GiangVien", b =>
                {
                    b.HasOne("SchoolController.Models.TaiKhoan", "TenTaiKhoanNavigation")
                        .WithMany("GiangViens")
                        .HasForeignKey("TenTaiKhoan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TenTaiKhoanNavigation");
                });

            modelBuilder.Entity("SchoolController.Models.GiangVienMonHoc", b =>
                {
                    b.HasOne("SchoolController.Models.GiangVien", "MaGiangVienNavigation")
                        .WithMany("GiangVienMonHocs")
                        .HasForeignKey("MaGiangVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolController.Models.MonHoc", "MaMonHocNavigation")
                        .WithMany("GiangVienMonHocs")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaGiangVienNavigation");

                    b.Navigation("MaMonHocNavigation");
                });

            modelBuilder.Entity("SchoolController.Models.PhuHuynh", b =>
                {
                    b.HasOne("SchoolController.Models.TaiKhoan", "TenTaiKhoanNavigation")
                        .WithMany("PhuHuynhs")
                        .HasForeignKey("TenTaiKhoan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TenTaiKhoanNavigation");
                });

            modelBuilder.Entity("SchoolController.Models.SinhVien", b =>
                {
                    b.HasOne("SchoolController.Models.ChuyenNganh", "MaChuyenNganhNavigation")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaChuyenNganh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolController.Models.PhuHuynh", "MaPhuHuynhNavigation")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaPhuHuynh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolController.Models.TaiKhoan", "TenTaiKhoanNavigation")
                        .WithMany("SinhViens")
                        .HasForeignKey("TenTaiKhoan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaChuyenNganhNavigation");

                    b.Navigation("MaPhuHuynhNavigation");

                    b.Navigation("TenTaiKhoanNavigation");
                });

            modelBuilder.Entity("SchoolController.Models.ChuyenNganh", b =>
                {
                    b.Navigation("ChuyenNganhMonHocs");

                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("SchoolController.Models.GiangVien", b =>
                {
                    b.Navigation("DiemSos");

                    b.Navigation("GiangVienMonHocs");
                });

            modelBuilder.Entity("SchoolController.Models.Lop", b =>
                {
                    b.Navigation("DiemSos");
                });

            modelBuilder.Entity("SchoolController.Models.MonHoc", b =>
                {
                    b.Navigation("ChuyenNganhMonHocs");

                    b.Navigation("DiemSos");

                    b.Navigation("GiangVienMonHocs");
                });

            modelBuilder.Entity("SchoolController.Models.PhuHuynh", b =>
                {
                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("SchoolController.Models.SinhVien", b =>
                {
                    b.Navigation("DiemSos");
                });

            modelBuilder.Entity("SchoolController.Models.TaiKhoan", b =>
                {
                    b.Navigation("CanBoDaoTaos");

                    b.Navigation("GiangViens");

                    b.Navigation("PhuHuynhs");

                    b.Navigation("SinhViens");
                });
#pragma warning restore 612, 618
        }
    }
}
